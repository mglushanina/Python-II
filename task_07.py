"""

Любым удобным способом (генераторная функция, __iter__ + __next__) сделайте
итератор, вытаскивающий элементы из списка произвольной вложенности.

Считаем, что список может содержать только списки или какие-то значения,
которые и должен возвращать итератор при вызове next().

Воспользуйтесь isinstance для проверки типов.

Считаем, что в списке нет бесконечной рекурсии, т.е. нет ссылок на самого себя.

"""


def flatten_list(nested_list):
    ...
